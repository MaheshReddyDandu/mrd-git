"""Initial full schema

Revision ID: ec9840b46e31
Revises: 
Create Date: 2025-06-19 16:49:21.460262

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ec9840b46e31'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Only create tables and indexes, do not drop anything
    op.create_table('tenants',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('name', sa.VARCHAR(), nullable=False, unique=True),
        sa.Column('contact_email', sa.VARCHAR(), nullable=False),
        sa.Column('plan', sa.VARCHAR(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    )
    op.create_table('roles',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('name', sa.VARCHAR(length=50), nullable=False, index=True),
        sa.Column('description', sa.TEXT(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('tenant_id', sa.UUID(), sa.ForeignKey('tenants.id'), nullable=True),
    )
    op.create_index('ix_roles_name', 'roles', ['name'], unique=False)
    op.create_index('ix_roles_id', 'roles', ['id'], unique=False)
    op.create_table('users',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('email', sa.VARCHAR(length=255), nullable=False, unique=True, index=True),
        sa.Column('username', sa.VARCHAR(length=100), nullable=False, unique=True, index=True),
        sa.Column('hashed_password', sa.VARCHAR(length=255), nullable=False),
        sa.Column('is_active', sa.BOOLEAN(), nullable=True),
        sa.Column('needs_password', sa.BOOLEAN(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column('tenant_id', sa.UUID(), sa.ForeignKey('tenants.id'), nullable=True),
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_username_active', 'users', ['username', 'is_active'], unique=False)
    op.create_index('idx_user_email_active', 'users', ['email', 'is_active'], unique=False)
    op.create_table('user_roles',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('user_id', sa.UUID(), sa.ForeignKey('users.id', ondelete='CASCADE'), nullable=False),
        sa.Column('role_id', sa.UUID(), sa.ForeignKey('roles.id', ondelete='CASCADE'), nullable=False),
        sa.Column('assigned_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    )
    op.create_index('ix_user_roles_id', 'user_roles', ['id'], unique=False)
    op.create_index('idx_user_role_unique', 'user_roles', ['user_id', 'role_id'], unique=True)
    op.create_table('permissions',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('name', sa.VARCHAR(length=100), nullable=False, unique=True, index=True),
        sa.Column('description', sa.TEXT(), nullable=True),
        sa.Column('resource', sa.VARCHAR(length=100), index=True),
        sa.Column('action', sa.VARCHAR(length=50), index=True),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    )
    op.create_index('ix_permissions_resource', 'permissions', ['resource'], unique=False)
    op.create_index('ix_permissions_name', 'permissions', ['name'], unique=False)
    op.create_index('ix_permissions_id', 'permissions', ['id'], unique=False)
    op.create_index('ix_permissions_action', 'permissions', ['action'], unique=False)
    op.create_table('role_permissions',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('role_id', sa.UUID(), sa.ForeignKey('roles.id', ondelete='CASCADE'), nullable=False),
        sa.Column('permission_id', sa.UUID(), sa.ForeignKey('permissions.id', ondelete='CASCADE'), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    )
    op.create_index('ix_role_permissions_id', 'role_permissions', ['id'], unique=False)
    op.create_index('idx_role_permission_unique', 'role_permissions', ['role_id', 'permission_id'], unique=True)
    op.create_table('user_sessions',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('user_id', sa.UUID(), sa.ForeignKey('users.id', ondelete='CASCADE'), nullable=False),
        sa.Column('token_hash', sa.VARCHAR(length=255), index=True, nullable=False),
        sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('is_active', sa.BOOLEAN(), default=True),
    )
    op.create_index('idx_session_user_active', 'user_sessions', ['user_id', 'is_active'], unique=False)
    op.create_index('idx_session_token_expires', 'user_sessions', ['token_hash', 'expires_at'], unique=False)
    op.create_index('ix_user_sessions_id', 'user_sessions', ['id'], unique=False)
    op.create_index('ix_user_sessions_token_hash', 'user_sessions', ['token_hash'], unique=False)
    op.create_table('branches',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('tenant_id', sa.UUID(), sa.ForeignKey('tenants.id'), nullable=False),
        sa.Column('name', sa.VARCHAR(), nullable=False),
        sa.Column('address', sa.VARCHAR()),
        sa.Column('geo_fence', sa.VARCHAR()),
    )
    op.create_table('departments',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('tenant_id', sa.UUID(), sa.ForeignKey('tenants.id'), nullable=False),
        sa.Column('branch_id', sa.UUID(), sa.ForeignKey('branches.id')),
        sa.Column('name', sa.VARCHAR(), nullable=False),
    )
    op.create_table('employees',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('tenant_id', sa.UUID(), sa.ForeignKey('tenants.id'), nullable=False),
        sa.Column('department_id', sa.UUID(), sa.ForeignKey('departments.id')),
        sa.Column('role_id', sa.UUID(), sa.ForeignKey('roles.id')),
        sa.Column('name', sa.VARCHAR(), nullable=False),
        sa.Column('email', sa.VARCHAR(), unique=True, nullable=False),
        sa.Column('phone', sa.VARCHAR()),
        sa.Column('status', sa.VARCHAR(), default="active"),
    )
    op.create_table('attendance',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('tenant_id', sa.UUID(), sa.ForeignKey('tenants.id'), nullable=False),
        sa.Column('employee_id', sa.UUID(), sa.ForeignKey('employees.id'), nullable=False),
        sa.Column('date', sa.DATE(), nullable=False),
        sa.Column('clock_in', sa.TIMESTAMP()),
        sa.Column('clock_out', sa.TIMESTAMP()),
        sa.Column('location', sa.VARCHAR()),
        sa.Column('status', sa.VARCHAR()),
    )
    op.create_table('policies',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('tenant_id', sa.UUID(), sa.ForeignKey('tenants.id'), nullable=False),
        sa.Column('name', sa.VARCHAR(), nullable=False),
        sa.Column('type', sa.VARCHAR(), nullable=False),
        sa.Column('level', sa.VARCHAR(), nullable=False),
        sa.Column('rules', sa.TEXT(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    )
    op.create_table('policy_assignments',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('tenant_id', sa.UUID(), sa.ForeignKey('tenants.id'), nullable=False),
        sa.Column('policy_id', sa.UUID(), sa.ForeignKey('policies.id'), nullable=False),
        sa.Column('branch_id', sa.UUID(), sa.ForeignKey('branches.id'), nullable=True),
        sa.Column('department_id', sa.UUID(), sa.ForeignKey('departments.id'), nullable=True),
        sa.Column('employee_id', sa.UUID(), sa.ForeignKey('employees.id'), nullable=True),
        sa.Column('assigned_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    )
    op.create_table('regularization_requests',
        sa.Column('id', sa.UUID(), primary_key=True, nullable=False),
        sa.Column('tenant_id', sa.UUID(), sa.ForeignKey('tenants.id'), nullable=False),
        sa.Column('employee_id', sa.UUID(), sa.ForeignKey('employees.id'), nullable=False),
        sa.Column('date', sa.DATE(), nullable=False),
        sa.Column('reason', sa.VARCHAR(), nullable=False),
        sa.Column('requested_in', sa.TIMESTAMP(), nullable=True),
        sa.Column('requested_out', sa.TIMESTAMP(), nullable=True),
        sa.Column('status', sa.VARCHAR(), default="pending"),
        sa.Column('approver_id', sa.UUID(), sa.ForeignKey('employees.id'), nullable=True),
        sa.Column('approved_at', sa.TIMESTAMP(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('policy_assignments')
    op.drop_table('departments')
    op.drop_table('attendance')
    op.drop_index('ix_permissions_action', table_name='permissions')
    op.drop_index('ix_permissions_id', table_name='permissions')
    op.drop_index('ix_permissions_name', table_name='permissions')
    op.drop_index('ix_permissions_resource', table_name='permissions')
    op.drop_table('permissions')
    op.drop_table('policies')
    op.drop_table('tenants')
    op.drop_index('ix_roles_id', table_name='roles')
    op.drop_index('ix_roles_name', table_name='roles')
    op.drop_table('roles')
    op.drop_table('employees')
    op.drop_index('idx_user_email_active', table_name='users')
    op.drop_index('idx_user_username_active', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('idx_session_token_expires', table_name='user_sessions')
    op.drop_index('idx_session_user_active', table_name='user_sessions')
    op.drop_index('ix_user_sessions_id', table_name='user_sessions')
    op.drop_index('ix_user_sessions_token_hash', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_table('regularization_requests')
    op.drop_index('idx_role_permission_unique', table_name='role_permissions')
    op.drop_index('ix_role_permissions_id', table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_table('branches')
    op.drop_index('idx_user_role_unique', table_name='user_roles')
    op.drop_index('ix_user_roles_id', table_name='user_roles')
    op.drop_table('user_roles')
    # ### end Alembic commands ###
